\input texinfo   @c -*-texinfo-*-

@c %**start of header
@c $Id$
@c adopted from hpt.texi, written by Tema Zelikin 2:5097/31
@setfilename htick.info
@set HTICK HTICK
@set VERSION 1.9
@settitle @value{HTICK} @value{VERSION} - Husky Ticker
@setchapternewpage odd
@c %**end of header

@titlepage
@title @value{HTICK} @value{VERSION} manual
@subtitle Husky Ticker
@author Georgi Fofanov @@ 2:5050/29, fg@@fg.udm.ru
@author Nestyurkin Nikolay @@ 2:5020/3600, 3600@@mail.ru
@author Max Chernogor @@ 2:464/108, mche@@ua.fm
@page
@c{empty page to get the page numbering right}
@end titlepage

@contents

@ifinfo
@dircategory Fidonet Software
@direntry
* HTICK: (htick).               HTICK is a Fidonet file echo processor
@end direntry
@end ifinfo

@iftex
@afourpaper
@end iftex

@node Top, Overview, (dir), (dir)
@top @value{HTICK}
This document describes @value{HTICK} @value{VERSION}, a Fidonet Fileecho
Processor for OS/2, Windows, BeOS and Unix clones.

Because @value{HTICK} is a part of the @code{HUSKY} fidonet software project,
it uses the @code{fidoconfig} library and many configuration statements
described in a @ref{Top, Fidoconfig Manual, , fidoconfig, Fidoconfig manual}.

@menu
* Overview::                    What is @value{HTICK}?
* Installation::                Installation. @emph{Read this!}
* Command Line::                Command Line OPTIONS and SWITCHES.
* Configuration Reference::     Explanation of the configuration file.
* Support::                     Support information.
* Keyword Index::               Configuration File Keywords Index.
@end menu

@node Overview, Installation, Top, Top
@chapter An Overview of @value{HTICK}

@value{HTICK} is a Fidonet fileareas tosser with filefix. Now project is being
supported by Husky Development Team (see @url{http://husk.sf.net/team.html}).

@value{HTICK} features are:
@enumerate
@item Tossing fileareas.
@item Filefix (on the fly, from command line, limit for areas...).
@item Autocreating on the fly.
@item Automatic forwarding requests for missing areas to the uplinks.
@item Switching areas into passive (send-only) and back into active mode.
@item Resending files from passthrough and none passthrough fileareas.
@item Groups & levels for personal and public access to fileareas.
@item Security check of tossgroup.
@c @item dupe checking.
@item Link defaults.
@item Posting to net & echo areas.
@item Flexible file announcements via echo or netmail messages.
Wildcards in filearea tags allow easy configuration of
multiple announcement areas for different groups of fileareas.
@item Save announcements to disk, so you are protected from
losing announcements because of critical @value{HTICK} termination
(insufficient disk space, ^Break pressed, power off etc).
@item much, much more :)
@end enumerate

The advantages of @value{HTICK} are:

@enumerate
@item Open Source (GPL)
@item Many supported platforms & operating systems
@item Quick bug fixing
@end enumerate

@node Installation, Download, Overview, Top
@chapter Installation Procedures and Release Notes
This chapter provides you with information that is necessary to successfully
install and use @value{HTICK}.

We suppose that you already has compiled binaries. If not - read "Download"
or "Compile the Source Code" chapters.

@enumerate
@item Read FIDOCONFIG documentation about location of config files and the
statements of fidoconfig.
@item Create and edit config files for your purposes.
@item Run @code{tparser} from FIDOCONFIG package to test your config
(read about @code{PublicGroup} or @code{AccessGrp} if you want to use
groups for @code{FileEchoAreas}).
@item It is simply, isn't it? Enjoy! :-).
@end enumerate

@menu
* Download::  Download the Source Code & Binary Files
* Compiling:: How to compile the source code
* Support::   Support, Contacting the Author, Reporting Bugs, Contributing Code
@end menu

@node Download, Compiling, Installation, Installation
@section Download the Source Code & Binary Files

@table @asis
@item Main page (releases, source code, latest beta versions) - @url{https://github.com/huskyproject/htick}
@item Direct link to 'stable' branch sources: @url{http://husky.sf.net/cvs2/stable/}
@item Direct link to 'current' (development) branch sources: @url{http://husky.sf.net/cvs2/current/}
@end table

@node Compiling, Support, Download, Installation
@section Compiling the Source Code

1. The smapi and fidoconf packages are required for htick.

2. Put the fidoconf and smapi packages to the directory where the
   other packages of fido linux reside:

@table @asis
@item /usr/src/packages/
@item -> smapi/
@item -> fidoconfig/
@item -> htick/@*
@end table

3. Compile and install smapi and fidoconf packages. Use "Makefile" for
   dynamic executables and makefile.lnx (or whatever you need) for static
   ones.

4. Compile and install @value{HTICK}:
@table @asis
@item $ make
@item $ make install
@end table
You should use the _same_ makefiles in smapi, fidoconf and htick.

@node Support, Command Line, Compiling, Installation
@section Support

There are numerous reasons why you might wish to establish contact with developers.

@enumerate
@item
You have decided to use @value{HTICK} on a regular basis. In this case,
please do send a netmail at the address listed below.

@item
You have a general questions on how to configure or on how to use a certain
feature of @value{HTICK}. In other words, you need support. In this case,
you'd best post your question to one of the following echos:

@table @code
@item FIDOSOFT.HUSKY
The international Husky conference. English is the preferred language here.
@item RU.HUSKY
This Russian echo covers Husky Project.
@end table

If you have access to Internet, you may of course post your support request
or bug report into form on husky development site:
http://sourceforge.net/projects/husky, click the "Bugs" link if you want to post
a bug report.

If you do not have access to any of these echos and internet, you may of course
also contact developers via netmail or e-mail at the addresses listed below.

@item
You want to report a bug. There are two sorts of bugs:

@enumerate a
@item Normal bugs.
You think that a certain function of @value{HTICK} does not work as expected,
e.g. it is producing garbage, or doing strange things, or similar. In this
case, either post to the echos listed above, bugrack on site or contact
developers via netmail. Please do supply all information that is necessary
to understand your problem.

@item Fatal bugs.
A fatal bug occurs if @value{HTICK} crashes. Depending on your operating
system, the symptom might be a core dump, or a SYS 3175, or a general
protection fault, or a system lockup, or a spontaneous reboot. We do consider
a crash untolerable. No matter how stupid things you do, you should not be
able to crash @value{HTICK}.

If you are experienced user and get core dump, you can send developers gdb
report. If you have a crash, locate @file{core} file that has been
generated. Then run $ gdb htick core, type where. @value{HTICK} must be
compiled with debug information (DEBUG=1 in @file{huskymak.cfg} file).
Then send report to addresses below.

If you are running any other binary version (like Windows), you will not
get a core file on a crash. Write down as much information as you can,
try to find a way to reproduce the crash and contact autors at the addresses
below. Please attach log-file with @code{loglevels 1-0A-Za-z} (all numbers
and letters).
@end enumerate

@item You want to contribute to @value{HTICK}.
If you are a programmer and have fixed a problem in @value{HTICK} on your
own, please submit your changes to me. The preferred way for doing so is to
send to developers a difference file in GNU diff format (with -c parameter).
Your work will be highly appreciated and honored in an appropriate place.
If you want to regularly work on @value{HTICK}, we also have a CVS server
online that you can have access to if you like.

If you want to write a new feature for @value{HTICK}, please contact developers
beforehand to avoid that we do duplicate work. Again, we will appreciate and
honor any efforts done by you. Please note that for writing a @value{HTICK}
enhancement, you should be familiar with C. Also, @value{HTICK} uses a
special indentation style throughout the source code, that we would like
you to adhere to.
@end enumerate

So here are developers' addresses if you want to get in contact with us:

@itemize @bullet
@item Fidonet:
Max Chernogor @@ 2:464/108
@item e-mail:
mche@@ua.fm
@end itemize

@itemize @bullet
@item Fidonet:
Stas Degteff @@ 2:5080/102
@item e-mail:
stas_degteff@@users.sf.net
@end itemize

@node Command Line, Configuration Reference, Support, Top
@chapter @value{HTICK} @value{VERSION} Command Line OPTIONS and SWITCHES
To get help about the command line syntax use @value{HTICK} without any arguments

@table @asis
@item Syntax:
@code{htick [options] <command>}
@item where @code{<command>} is one of:
@table @asis
@item @code{toss [annfecho <file>]}
Reading *.tic and tossing files. Optionally announce new fileechos in text file.
@item @code{toss -b}
Toss bad tics.
@item @code{scan}
Scan netmail area for mails to filefix and process filefix commands
contained inside the mails
@item @code{ffix <FTN address> <command>}
Process filefix command @code{<command>} for @code{<FTN address>} from command line
@item @code{ffix! <FTN address> <command>}
Do the same job as 'ffix' and additionally notify the link of the processed
filefix command as in example:@*
@code{htick ffix! 2:464/910 -910.TEST}@*
This command removes file echo link @code{2:464/910} from @code{910.TEST}
fileecho and produces a message to @code{2:464/910} with body "@code{-910.TEST}"
@item @code{relink <pattern> <addr>}
In order to refresh subscription send to filefix at address @code{<addr>}
commands to subscribe for fileechos with names matching @code{<pattern>}.
@item @code{relink -f <file> <addr>}
In order to refresh subscription send to filefix at address @code{<addr>}
commands to subscribe for fileechos with names contained in @code{<file>}.
@item @code{resubscribe <pattern> <fromaddr> <toaddr>}
Move subscription of fileareas matching @code{<pattern>} from link with
address @code{<fromaddr>} to another link with address @code{<toaddr>}
@item @code{resubscribe -f <file> <fromaddr> <toaddr>}
Move subscription of fileareas listed in @code{<file>} from link with
address @code{<fromaddr>} to another link with address @code{<toaddr>}
@item @code{clean}
Clean passthrough directory (remove sent files) and remove old files in fileechos
@item @code{announce}
Announce new files as defined in Ann* config statements
(@xref{Announce System}.)
@item @code{hatch <file> <area> [replace [<filemask>]] [desc <desc> [<ldesc>]]}
Hatch @code{<file>} into @code{<area>} optionally using description for the file;
if @code{replace} is present in the command then add a replace field to TIC;
if @code{<filemask>} is not present in the command then put @code{<file>} in the field.@*
A short (one line) description @code{<desc>} and a long description
@code{<ldesc>} may be put to TIC.@*
One may use the following as @code{<desc>}:
@table @asis
@item @code{@@@@BBS}
to use first line from files.bbs
@item @code{@@@@DIZ}
to use first line from the contained file_id.diz
@item @code{@@@@<file>}
to use first line from <file>
@item @code{@@BBS}
to load description from files.bbs
@item @code{@@DIZ}
to load description from the contained file_id.diz
@item @code{@@<file>}
to load description from <file>
@end table
and the last three items may be used as @code{<ldesc>}.
@item @code{send <file> <filearea> <address>}
Send @code{<file>} from @code{<filearea>} to the @code{<address>} with accompanying .tic
@item @code{filelist <file> [<dirlist>]}
Generate filelist containing all files in base.
@itemize @bullet
@item @code{<file>}
filename to write output to.
@item @code{<dirlist>}
filename to which only list of fileecho directories is written.
@end itemize
@end table
@item and where options are:
@table @asis
@item @code{-q}
Quiet mode (display only urgent messages to console)
@item @code{-c <config-file>}
Specify an alternative configuration file
@end table
@end table

@node Configuration Reference, Keywords, Command Line, Top
@chapter @value{HTICK} @value{VERSION} Configuration Reference

@value{HTICK} is based on FIDOCONFIG library, so read documentation of
FIDOCONFIG about location of config file, keywords ideology and about
majority of the keywords, @xref{Top, Fidoconfig Manual, , fidoconfig, Fidoconfig manual}.

@menu
* Keywords::               This chapter describes keywords
* Common husky keywords::  List of keywords used in many husky programs
* Link Keywords::          Keywords that can be repeated for different links
* FileArea Definition::    FileAreas definition
* Announce System::        Announces definition
@end menu

@node Keywords, FileAreaBaseDir, Configuration Reference, Configuration Reference
@section Keywords

@menu
* FileAreaBaseDir::      Base directory for FileAreas.
* PassFileAreaDir::      In this directory shall be put files from Passthrough
                         Fileareas.
* FileDescPos::          Indent position for long descriptions in FILES.BSS.
* fileLDescString::      Prefix string for long descriptions in FILES.BBS.
* FileFixHelp::          Help file for FileFix.
* FileArea::             Filearea definition.
* ExecOnFile::           Execute some command on receiving file.
* SaveTic::              Save files with tics.
* MaxTicLineLength::     Set maximum line length in outgoing TICs to number.
* BusyFileDir::          Where shall be put TICs for busy links.
* ConvertLongNames::     What to do with long names when toss or hatch.
* ConvertShortNames::    What to do with short names when toss or hatch.
* addDLC::               Add Download counters to FILES.BBS.
* DLCDigits::            How much digits DLC must be.
* ticOutbound::          TICs are stored here and killed after transmission.
* filefixKillRequests::  Kill filefix request after processing.
* filefixReportsAttr::   Set kill/sent flag to filefix replies.
* BBSarea::              Filearea without subscribing (for `htick filelist`).
* fileDescription::      Name of file to hold file descriptions,
                         by default files.bbs
* fileDescName::         If no LDESC is defined in tic file, use <name> file
                         from archive to fill it.
* FileAreaCreatePerms::  Set permissions for newly created filearea directories.
* FileFixFromName::      Originator name in filefix replies.
* AutoFileCreateFlag::   Create flag when filearea has been autocreated.
* FileFixNames::         Set of names on which FileFix will respond.
@end menu

@value{HTICK} is based on FIDOCONFIG library, so read documentation of
FIDOCONFIG about location of config file, keywords ideology and about
majority of the keywords, @xref{Top, Fidoconfig Manual, , fidoconfig, Fidoconfig manual}.

@node FileAreaBaseDir, PassFileAreaDir, Keywords, Keywords
@subsection FileAreaBaseDir
@findex FileAreaBaseDir
@table @asis
@item Syntax:
@code{FileAreaBaseDir <directory>}
@item Example:
@code{FileAreaBaseDir /var/spool/fido/fileareas}
@end table

Where the directories for all Fileareas shall be made at autocreate. Same as MsgBaseDir.

This statement cannot be repeated.

@node PassFileAreaDir, FileDescPos, FileAreaBaseDir, Keywords
@subsection PassFileAreaDir
@findex PassFileAreaDir
@table @asis
@item Syntax:
@code{PassFileAreaDir <directory>}
@item Example:
@code{PassFileAreaDir /var/spool/fido/transit}
@end table

Where shall be put files from Passthrough Fileareas (and TICs, if ticOutbound is not defined).

This statement cannot be repeated.

@node FileDescPos, fileLDescString, PassFileAreaDir, Keywords
@subsection FileDescPos
@findex FileDescPos
@table @asis
@item Syntax:
@code{FileDescPos <number>}
@item Example:
@code{FileDescPos 13}
@end table

The number of spaces to indent long descriptions in FILES.BBS. Recommend: 13 (8.3+space)

This statement cannot be repeated.

@node fileLDescString, FileFixHelp, FileDescPos, Keywords
@subsection fileLDescString
@findex fileLDescString
@table @asis
@item Syntax:
@code{fileLDescString <string>}
@item Example:
@code{fileLDescString ">"}
@end table

This string is put before long descriptions in FILES.BBS (Usually ">" or "+".).
Default value: single space.

This statement cannot be repeated.

@node FileFixHelp, ExecOnFile, fileLDescString, Keywords
@subsection FileFixHelp
@findex FileFixHelp
@table @asis
@item Syntax:
@code{FileFixHelp <string>}
@item Example:
@code{FileFixHelp /usr/local/fido/filefix.hlp}
@end table

Help file for FileFix, same as AreaFixHelp for HPT's AreaFix

This statement cannot be repeated.

@node ExecOnFile, SaveTic, FileFixHelp, Keywords
@subsection ExecOnFile
@findex ExecOnFile
@table @asis
@item Syntax:
@code{ExecOnFile <filearea> <filemask> <command>}
@item Example:
@code{ExecOnFile husky *.diff /usr/local/fido/update_source.sh}
@end table

Execute some command on receiving file. 
Command gets full filepath as parameter (space and file pathname should be
appended to command string before execution).

This statement can be repeated.

@node SaveTic, MaxTicLineLength, ExecOnFile, Keywords
@subsection SaveTic
@findex SaveTic
@table @asis
@item Syntax:
@code{SaveTic <FileEchoMask> <FileOption> <DirToSaveTic> <DaysToKeepTics>}
@item Example:
@code{SaveTic husky -l /usr/local/husky 365}
@end table

@table @asis
@item <DirToSaveTic>
where to put TICs for fileecho[s] <FileEchoMask>

@item <FileOption>
save files with tics. May be:

@table @asis
@item empty
files will not be copied

@end table
@table @option
@item -l
link files from fileechodir to <DirToSaveTic>

@item -c
copy files from fileechodir to <DirToSaveTic>
@end table

Options @option{-l} and @option{-c} work only for non-Passthrough fileechos

@item <DaysToKeepTics>
<DaysToKeepTics> is optional. If it's defined tics saved in <DirToSaveTic> will be kept for
<DaysToKeepTics> days.

@end table



This statement can be repeated.

@node MaxTicLineLength, BusyFileDir, SaveTic, Keywords
@subsection MaxTicLineLength
@findex MaxTicLineLength
@table @asis
@item Syntax:
@code{MaxTicLineLength <number>}
@item Example:
@code{MaxTicLineLength 79}
@end table

Set maximum line length in outgoing TICs to number.

This statement cannot be repeated.

@node BusyFileDir, ConvertLongNames, MaxTicLineLength, Keywords
@subsection BusyFileDir
@findex BusyFileDir
@table @asis
@item Syntax:
@code{BusyFileDir <directory>}
@item Example:
@code{BusyFileDir /var/spool/fido/htick.busy/}
@end table

Where shall be put TICs for busy links (default <outbound>/busy.htk).

This statement cannot be repeated.

@node ConvertLongNames, ConvertShortNames, BusyFileDir, Keywords
@subsection ConvertLongNames
@findex ConvertLongNames
@table @asis
@item Syntax:
@code{ConvertLongNames <Upper|Lower|DontTouch>}
@item Example:
@code{ConvertLongNames DontTouch}
@end table

What to do with long names when toss or hatch. 
Saying 'long name' we mean a mixed cased name or a name longer than 8.3

This statement cannot be repeated.

@node ConvertShortNames, addDLC, ConvertLongNames, Keywords
@subsection ConvertShortNames
@findex ConvertShortNames
@table @asis
@item Syntax:
@code{ConvertShortNames <Upper|Lower|DontTouch>}
@item Example:
@code{ConvertShortNames DontTouch}
@end table

What to do with short names when toss or hatch.
Saying 'short name' we mean a DOS-like name: 8.3, without mixed case.

This statement cannot be repeated.

@node addDLC, DLCDigits, ConvertShortNames, Keywords
@subsection addDLC
@findex addDLC
@table @asis
@item Syntax:
@code{addDLC <bool>}
@item Example:
@code{addDLC yes}
@end table

Add Download counters ([000]) to files.bbs. Use with DLCDigits only!

This statement cannot be repeated.

@node DLCDigits, ticOutbound, addDLC, Keywords
@subsection DLCDigits
@findex DLCDigits
@table @asis
@item Syntax:
@code{DLCDigits <number>}
@item Example:
@code{DLCDigits 4}
@end table

How much digits DLC must be. DLC has [000] form.

This statement cannot be repeated.

@node ticOutbound, filefixKillRequests, DLCDigits, Keywords
@subsection ticOutbound
@findex ticOutbound
@table @asis
@item Syntax:
@code{ticOutbound <directory>}
@item Example:
@code{ticOutbound /var/spool/fido/ticOub}
@end table

TICs are stored here and killed after transmission. Default: use PassFileAreaDir value

This statement cannot be repeated.

@node filefixKillRequests, filefixReportsAttr, ticOutbound, Keywords
@subsection filefixKillRequests
@findex filefixKillRequests
@table @asis
@item Syntax:
@code{filefixKillRequests <bool>}
@item Example:
@code{filefixKillRequests yes}
@end table

Kill filefix request after processing.

This statement cannot be repeated.

@node filefixReportsAttr, BBSarea, filefixKillRequests, Keywords
@subsection filefixReportsAttr
@findex filefixReportsAttr
@table @asis
@item Syntax:
@code{filefixReportsAttr <attr>}
@item Example:
@code{filefixReportsAttr pvt k/s loc}
@item or
@code{filefixReportsAttr pvt,k/s,loc}
@end table

Set flags to filefix replies.

Valid attributes are:
@table @asis
@item pvt
@item crash
@item read
@item sent
@item att
@item fwd
@item orphan
@item k/s
@item loc
@item fwd
@item xx2
@item frq
@item rrq
@item cpt
@item arq
@item urq
@item kfs
@item tfs
@item dir
@item imm
@item cfm
@item npd
@end table

Default is "pvt loc k/s npd".

This statement cannot be repeated.

@node BBSarea, fileDescription, filefixReportsAttr, Keywords
@subsection BBSarea
@findex BBSarea
@table @asis
@item Syntax:
@code{BBSarea <name> <bbsareapath>}
@item Example:
@code{bbsarea bbs /var/spool/fido/bbsareas/bbs}
@end table

Filearea without subscribing, not shown in filefix reports.
Use for filelist generation only (`htick filelist` command).

This statement cannot be repeated.

@node fileDescription, fileDescName, BBSarea, Keywords
@subsection fileDescription
@findex fileDescription
@table @asis
@item Syntax:
@code{fileDescription <name>}
@item Example:
@code{fileDescription descript.ion}
@end table

Name of file to hold file descriptions, by default files.bbs

This statement can be repeated.

@node fileDescName, FileAreaCreatePerms, fileDescription, Keywords
@subsection fileDescName
@findex fileDescName
@table @asis
@item Syntax:
@code{fileDescName <name>}
@item Example:
@code{fileDescName file_id.diz}
@end table

If LDESC is not defined in tic file, use <name> file from archive to fill it
(usually file_id.diz).

This statement can be repeated.

@subsection Note
@code{unpack} action should be defined for archive and contain @option{$f} parameter
(@option{$f} is replaced with file name while unpacking).

Examples:
@example
Unpack  "/path/to/unrar e -y -c- -o+ -inul $a $p $f"   0 52617221 # *.rar
Unpack  "d:\path\unrar  e -y -c- -o+ -inul $a $p $f"  28 52534658 # rar-sfx/DOS
Unpack "\path\pkzipc -ext -dir=none -over=all -nozip -silent $a $p $f" 0 504b0304
Unpack "unzip -joLqq $a -d $p" 0 504b0304
Unpack "pkunzip -njCL $a -d $p $f" 0 504b0304
Unpack "pkzip25 -ext -silent -over=all -nofix -nozip $a $p $f" 0
@end example

@node FileAreaCreatePerms, FileFixFromName, fileDescName, Keywords
@subsection FileAreaCreatePerms
@findex FileAreaCreatePerms
@table @asis
@item Syntax:
@code{FileAreaCreatePerms <mode>}
@item Example:
@code{FileAreaCreatePerms 644}
@end table

Define permissions for newly created filearea directories (UNIX only)

This statement cannot be repeated.

@node FileFixFromName, AutoFileCreateFlag, FileAreaCreatePerms, Keywords
@subsection FileFixFromName
@findex FileFixFromName
@table @asis
@item Syntax:
@code{FileFixFromName <string>}
@item Example:
@code{FileFixFromName FileFix}
@end table

Originator name in filefix replies.

This statement cannot be repeated.

@node AutoFileCreateFlag, FileFixNames, FileFixFromName, Keywords
@subsection AutoFileCreateFlag
@findex AutoFileCreateFlag
@table @asis
@item Syntax:
@code{AutoFileCreateFlag <file>}
@item Example:
@code{AutoFileCreateFlag /usr/local/fido/flags/new_filearea}
@end table

Create flag when filearea has been autocreated.

This statement cannot be repeated.

@node FileFixNames, Link Keywords, AutoFileCreateFlag, Keywords
@subsection FileFixNames
@findex FileFixNames
@table @asis
@item Syntax:
@code{FileFixNames <string>}
@item Example:
@code{FileFixNames allfix filefix htick}
@end table

Set of names separated by space on which FileFix will respond

This statement cannot be repeated.

@node Link Keywords, TicPwd, FileFixNames, Configuration Reference
@section Link Keywords

@menu
* TicPwd::                  Password for ticket files
* fileEchoFlavour::         This statement sets the flavour which outgoing
                            files in fileechos for this link get.
* fileAreaDefaults::        Set defaults for filearea definitions that follow.
* RemoteFileRobotName::     Name of remote filefix robot (need for
                            FileForwardRequest).
* FileFix::                 filefix access for this link
* FileFixEchoLimit::        Area subscription limit.
* noTIC::                   Disable TIC file creation.
* autoFileCreate::          Allow or deny autocreating fileechos received from
                            this link.
* AutoFileCreateFile::      Specifies the file new filearea will be placed into.
* AutoFileCreateSubdirs::   Whether to autocreate areas like /fils/gfd.app.edit
                            (off) or /files/gfd/app/edit (on).
* delNotReceivedTIC::       If file not received then remove TIC.
* FileFixFSC87Subset::      This boolean switch will change on a per link basis
                            how TIC files are processed.
* TickerPackToBox::         If link has file box - toss files and tics there.
* LinkFileBaseDir::         Where autocreated fileareas will be placed.
* ForwardFileRequests::     Allow fileareas subscribe requests to be forwarded
                            to link.
* ForwardFilePriority::     Priority in uplinks order for filearea subscribing
                            forward-requests.
* ForwardFileRequestFile::  List of available fileareas from this link.
* FileFixEchoLimit::        Area subscribe limit.
@end menu

@value{HTICK} is based on FIDOCONFIG library, so read documentation of
FIDOCONFIG about location of config file, keywords ideology and about
majority of the keywords, @xref{Top, Fidoconfig Manual, , fidoconfig, Fidoconfig manual}.

@node TicPwd, fileEchoFlavour, Link Keywords, Link Keywords
@subsection TicPwd
@findex TicPwd
@table @asis
@item Syntax:
@code{TicPwd [<string>]}
@item Example:
@code{TicPwd MySeCrET}
@end table

For full description look @ref{ticpwd, ticpwd in the Fidoconfig manual, , fidoconfig, Fidoconfig manual}

@node fileEchoFlavour, fileAreaDefaults, TicPwd, Link Keywords
@subsection fileEchoFlavour
@findex fileEchoFlavour
@table @asis
@item Syntax:
@code{fileEchoFlavour <hold|normal|crash|direct|immediate>}
@item Example:
@code{fileEchoFlavour direct}
@end table

This statement sets the flavour which outgoing files in fileechos for this link get.
For example set @code{fileEchoFlavour} to hold for points and to crash for uplinks.

This statement can only be repeated for different links.

@node fileAreaDefaults, RemoteFileRobotName, fileEchoFlavour, Link Keywords
@subsection fileAreaDefaults
@findex fileAreaDefaults
@table @asis
@item Syntax:
@code{fileAreaDefaults [<options> [links]]}
@item Example:
@code{fileAreaDefaults -lw 100 -g Z 2:5097/31.1}
@end table

Set default options for filearea definitions that follow. All options are
possible except areatag and path. Settings in a filearea definition override
the ones in @code{fileAreaDefaults}. A @code{fileAreaDefaults} setting is 
valid until a next @code{fileAreaDefaults}. Defaults are switched off with 
empty @code{fileAreaDefaults}.

See also @ref{EchoAreaDefaults,,,fidoconfig}.

This statement can only be repeated for different links.

@node RemoteFileRobotName, noTIC, fileAreaDefaults, Link Keywords
@subsection RemoteFileRobotName
@findex RemoteFileRobotName
@table @asis
@item Syntax:
@code{RemoteFileRobotName <name>}
@item Example:
@code{RemoteFileRobotName allfix}
@end table

Name of remote filefix robot (needed for FileForwardRequest)

This statement can only be repeated for different links.

@node noTIC, autoFileCreate, RemoteFileRobotName, Link Keywords
@subsection noTIC
@findex noTIC
@table @asis
@item Syntax:
@code{noTIC <bool>}
@item Example:
@code{noTIC yes}
@end table

Disable TIC File Creation

This statement can only be repeated for different links.

@node autoFileCreate, AutoFileCreateFile, noTIC, Link Keywords
@subsection autoFileCreate
@findex autoFileCreate
@table @asis
@item Syntax:
@code{autoFileCreate <on|off>}
@item Example:
@code{autoFileCreate on}
@end table

Allow or deny autocreating fileechos received from this link.

This statement can only be repeated for different links.

@node AutoFileCreateFile, AutoFileCreateSubdirs, autoFileCreate, Link Keywords
@subsection AutoFileCreateFile
@findex AutoFileCreateFile
@table @asis
@item Syntax:
@code{AutoFileCreateFile <file>}
@item Example:
@code{AutoFileCreateFile /usr/local/fido/hpt/config.filefix}
@end table

Specifies the file new filearea definitions will be placed into

This statement can only be repeated for different links.

@node AutoFileCreateSubdirs, delNotReceivedTIC, AutoFileCreateFile, Link Keywords
@subsection AutoFileCreateSubdirs
@findex AutoFileCreateSubdirs
@table @asis
@item Syntax:
@code{AutoFileCreateSubdirs <on|off>}
@item Example:
@code{AutoFileCreateSubdirs on}
@end table

Whether to autocreate areas like /filebase/gfd.app.edit (off) or /filebase/gfd/app/edit (on).
If you want to configure this globally instead of on per-link basis, set this in the deflink
section. For more information see 'AutoAreaCreateSubdirs' in the hpt manual.

This statement can only be repeated for different links.

@node delNotReceivedTIC, FileFixFSC87Subset, AutoFileCreateSubdirs, Link Keywords
@subsection delNotReceivedTIC
@findex delNotReceivedTIC
@table @asis
@item Syntax:
@code{delNotReceivedTIC <on|off>}
@item Example:
@code{delNotReceivedTIC on}
@end table

Remove TIC if file was not received

This statement can only be repeated for different links.

@node FileFixFSC87Subset, TickerPackToBox, delNotReceivedTIC, Link Keywords
@subsection FileFixFSC87Subset
@findex FileFixFSC87Subset
@table @asis
@item Syntax:
@code{FileFixFSC87Subset <on|off>}
@item Example:
@code{FileFixFSC87Subset on}
@end table

This boolean switch will change on a per link basis how TIC files are processed. By default
this switch is ON. htick will then operate only on FSC87-compliant keywords and ignore unknown
keywords in the TIC file processed. If this switch is set to OFF all implemented keywords will
be used which can (and, in interaction with some tick processors, WILL) lead to severe problems.
Unknown keywords found in a TIC file will make htick stop processing that file. If you don't
know what all this is about set FileFixFSC87Subset to ON for all your links. It won't hurt.

This statement can only be repeated for different links.

@node TickerPackToBox, LinkFileBaseDir, FileFixFSC87Subset, Link Keywords
@subsection TickerPackToBox
@findex TickerPackToBox
@table @asis
@item Syntax:
@code{TickerPackToBox <on|off>}
@item Example:
@code{TickerPackToBox on}
@end table

If link has file box - toss files and tics there

This statement can only be repeated for different links.

@node LinkFileBaseDir, ForwardFileRequests, TickerPackToBox, Link Keywords
@subsection LinkFileBaseDir
@findex LinkFileBaseDir
@table @asis
@item Syntax:
@code{LinkFileBaseDir <directory>}
@item Example:
@code{LinkFileBaseDir /usr/local/fido/fileareas/2.5097.64.0}
@end table

Where autocreated fileareas will be placed to (may be "passthrough")

This statement can only be repeated for different links.

@node ForwardFileRequests, ForwardFilePriority, LinkFileBaseDir, Link Keywords
@subsection ForwardFileRequests
@findex ForwardFileRequests
@table @asis
@item Syntax:
@code{ForwardFileRequests <on|off>}
@item Example:
@code{ForwardFileRequests on}
@end table

Allow fileareas forward-requests to this link.

This statement can only be repeated for different links.

@node ForwardFilePriority, ForwardFileRequestFile, ForwardFileRequests, Link Keywords
@subsection ForwardFilePriority
@findex ForwardFilePriority
@table @asis
@item Syntax:
@code{ForwardFilePriority <number>}
@item Example:
@code{ForwardFilePriority 1}
@end table

Priority in uplinks order for filearea subscribing forward-requests

This statement can only be repeated for different links.

@node ForwardFileRequestFile, FileFix, ForwardFilePriority, Link Keywords
@subsection ForwardFileRequestFile
@findex ForwardFileRequestFile
@table @asis
@item Syntax:
@code{ForwardFileRequestFile <file>}
@item Example:
@code{ForwardFileRequestFile /usr/local/fido/hpt/uplink1.lst}
@end table

List of available fileareas from this link

This statement can only be repeated for different links.


@node FileFix, FileFixEchoLimit, ForwardFileRequestFile, Link Keywords
@subsection FileFix
@findex FileFixEcho
@table @asis
@item Syntax:
@code{filefix <bool>}
@item Example:
@code{filefix off}
@end table

By default filefix is "on". You can turn off using of filefix by this link.

This statement can only be repeated for different links.


@node FileFixEchoLimit, FileArea Definition, FileFix, Link Keywords
@subsection FileFixEchoLimit
@findex FileFixEchoLimit
@table @asis
@item Syntax:
@code{FileFixEchoLimit <number>}
@item Example:
@code{FileFixEchoLimit 10}
@end table

Area subscribe limit (max fileareas number this link is allowed to subscribe to)

This statement can only be repeated for different links.

@node FileArea Definition, FileArea, FileFixEchoLimit, Configuration Reference
@section FileArea Definition

@menu
* FileArea::                     definition of FileArea.
@end menu

@value{HTICK} is based on FIDOCONFIG library, so read documentation of
FIDOCONFIG about location of config file, keywords ideology and about
majority of the keywords, @xref{Top, Fidoconfig Manual, , fidoconfig, Fidoconfig manual}.

@node FileArea, Announce System, FileArea Definition, FileArea Definition
@subsection FileArea
@findex FileArea
@table @asis
@item Syntax:
@code{FileArea <name> <fileareapath> [options] <uplink> <downlinks>}
@item Example:
@code{FileArea husky /var/spool/fido/fileareas/husky -a 2:5097/31 -p 28 -g Z -d "HUSKY fileecho" 2:5097/64 2:5097/303}
@end table

Same as EchoArea, most options are valid:

@table @asis
@item -a <address>
Our own address for this area.

@item -d "<string>"
Description for this filearea.

@item -g <group>
Group for this filearea.

@item -hide
Hide area (don't show in %LIST and in an announcement).

@item -nohide
Show area in %LIST and in an announcement if fileareadefaults set to @code{-hide}.

@item -lr <number>
"Read level": min link level for sending files from this filearea to this link.
Value can't be negative.

@item -lw <number>
"Write level": 
Min link level allowed to post into this filearea files received from link.
Value can't be negative.

@item -mandatory
Disallow remote unsubscribe (disable unsubscribe filefix command).

@item -nomandatory
Allow remote unsubscribe (enable unsubscribe filefix command) if
fileareadefaults set to @code{-mandatory}.

@item -manual
Disallow remote subscribe (disable subscribe filefix command)

@item -nomanual
Allow remote subscribe (enable subscribe filefix command)
if fileareadefaults set to @code{-manual}.

@item -noCRC
Disable CRC check for incoming files.

@item -CRC
Enable CRC check for incoming files
if fileareadefaults set to @code{-noCRC}.

@item -nodiz
Do not try to get file description from <fileDescName> (for packed files).

@item -diz
Try to get file description from <fileDescName> (for packed files)
if fileareadefaults set to @code{-nodiz}.

@item -pause
%PAUSE has effect to this filearea.

@item -nopause
%PAUSE has no effect to this filearea
if fileareadefaults set to @code{-pause}.

@item -noreplace
Don't replace existing files in this filearea.

@item -replace
Replace existing files in this filearea if fileareadefaults set to @code{-noreplace}.

@item -norename
Don't rename new file if name already exists in filearea (default, if not overwritten
in @code{fileareadefaults}).

@item -rename
Rename new file if name already exists in filearea. The file will be renamed only in
the storage directory, not for further distribution to other nodes.

Renaming scheme:
@itemize
@item
@format
long filename
file.more.ext -> file.<number>.more.ext
e.g. long-name.tar.gz -> long-name.01.tar.gz
@end format
@item
@format
DOS style filename
file.ext -> file.<1st char of ext><number>
e.g. file.zip -> file.z01
@end format
@item <number> is  01 - 99
@end itemize

@item -p <integer>
Purge after n days. Setting to 0 to disables purging (this is default value).

@item -sendorig
Send files from PassFileAreaDir for non passthrough areas.

@item -nosendorig
Send files from FileArea directory for non passthrough areas
if fileareadefaults set to @code{-sendorig}.

@item -r
Default read-only: set link read-only at subscribing.

@item -w
Default write-only: set link write-only at subscribing.

@end table

@node Announce System, AnnounceSpool, FileArea, Configuration Reference
@section Announce System

Htick announcements are selective, they can be different for different
fileareas.
Token @code{AnnAreaTag} starts a new section of announce definition,
other tokens define lists of fileareas included into announcement
and describe announce message.

To post announcements run @code{htick announce}.

You may turn announcements off: just remove @code{AnnounceSpool}
definition from config.

@menu
* AnnounceSpool::         Directory for accumulating report information.
* AnnAreaTag::            Name of area or file where annoucement will be placed.
* AnnInclude::            Array of fileecho masks that will be announced in
                          this annAreaTag.
* AnnExclude::            Array of filearea masks that won't be announced in
                          this annAreaTag.
* AnnTo::                 Announcement message destination name.
* AnnFrom::               Announcement message originator name.
* AnnSubj::               Announcement message subject.
* AnnAddrTo::             Announcement message destination address (use for
                          netmail area only).
* AnnAddrFrom::           Announcement message originator address.
* AnnOrigin::             Origin line in announcement message.
* AnnMessFlags::          Announcement message attributes (k/s loc hld ...).
* AnnFileRFrom::          Show in announcement: address of system which file
                          was received from.
* AnnFileOrigin::         Show in announcement: address of system who has
                          hatched file.
* Announcements example:: Example for understanding announcements (from real
                          config).
@end menu

@value{HTICK} is based on FIDOCONFIG library, so read documentation of
FIDOCONFIG about location of config file, keywords ideology and about
majority of the keywords, @xref{Top, Fidoconfig Manual, , fidoconfig, Fidoconfig manual}.


@node AnnounceSpool, AnnAreaTag, Announce System, Announce System
@subsection AnnounceSpool
@findex AnnounceSpool
@table @asis
@item Syntax:
@code{AnnounceSpool <path>}
@item Example:
@code{AnnounceSpool /var/spool/fido/announce}
@end table

Directory for accumulating report information.

This statement cannot be repeated.

@node AnnAreaTag, AnnInclude, AnnounceSpool, Announce System
@subsection AnnAreaTag
@findex AnnAreaTag
@table @asis
@item Syntax:
@code{AnnAreaTag <AREATAG|@@filename>}
@item Example:
@code{AnnAreaTag local.announce}
@end table

Begins new announcement definition section. <AREATAG> is name of an area
where annoucement will be placed to; <@@filename> is filename with leading
'@@' where annoucement will be placed to.

This statement can be repeated.


@node AnnInclude, AnnExclude, AnnAreaTag, Announce System
@subsection AnnInclude
@findex AnnInclude
@table @asis
@item Syntax:
@code{AnnInclude <fileecho mask list>}
@item Example:
@code{AnnInclude *}
@end table

Array of fileecho names|masks that will be announced in this annAreaTag. Default: all fileareas.

This statement can be repeated only for different AnnAreaTag.

@node AnnExclude, AnnTo, AnnInclude, Announce System
@subsection AnnExclude
@findex AnnExclude
@table @asis
@item Syntax:
@code{AnnExclude <fileecho mask list>}
@item Example:
@code{AnnExclude aftnged}
@end table

Array of filearea names|masks that won't be announced in this annAreaTag

This statement can be repeated only for different AnnAreaTag.

@node AnnTo, AnnFrom, AnnExclude, Announce System
@subsection AnnTo
@findex AnnTo
@table @asis
@item Syntax:
@code{AnnTo <string>}
@item Example:
@code{AnnTo All}
@end table

Announcement message destination name.

This statement can be repeated only for different AnnAreaTag.

@node AnnFrom, AnnSubj, AnnTo, Announce System
@subsection AnnFrom
@findex AnnFrom
@table @asis
@item Syntax:
@code{AnnFrom <string>}
@item Example:
@code{AnnFrom Announce Robot}
@end table

Announcement message originator name.

This statement can be repeated only for different AnnAreaTag.

@node AnnSubj, AnnAddrTo, AnnFrom, Announce System
@subsection AnnSubj
@findex AnnSubj
@table @asis
@item Syntax:
@code{AnnSubj <string>}
@item Example:
@code{AnnSubj New files arrived}
@end table

Announcement message subject.

This statement can be repeated only for different AnnAreaTag.

@node AnnAddrTo, AnnAddrFrom, AnnSubj, Announce System
@subsection AnnAddrTo
@findex AnnAddrTo
@table @asis
@item Syntax:
@code{AnnAddrTo <address>}
@item Example:
@code{AnnAddrTo 2:5097/31.1}
@end table

Announcement message destination address (use for netmail area).

This statement can be repeated only for different AnnAreaTag.

@node AnnAddrFrom, AnnOrigin, AnnAddrTo, Announce System
@subsection AnnAddrFrom
@findex AnnAddrFrom
@table @asis
@item Syntax:
@code{AnnAddrFrom <address>}
@item Example:
@code{AnnAddrFrom 2:5097/31}
@end table

Announcement message originator address.

This statement can be repeated only for different AnnAreaTag.

@node AnnOrigin, AnnMessFlags, AnnAddrFrom, Announce System
@subsection AnnOrigin
@findex AnnOrigin
@table @asis
@item Syntax:
@code{AnnOrigin <string>}
@item Example:
@code{AnnOrigin New files!}
@end table

Origin line in announcement message.

This statement can be repeated only for different AnnAreaTag.

@node AnnMessFlags, AnnFileRFrom, AnnOrigin, Announce System
@subsection AnnMessFlags
@findex AnnMessFlags
@table @asis
@item Syntax:
@code{AnnMessFlags <string>}
@item Example:
@code{AnnMessFlags loc hld}
@end table

Announcement message flags (k/s loc hld ...).

This statement can be repeated only for different AnnAreaTag.

@node AnnFileRFrom, AnnFileOrigin, AnnMessFlags, Announce System
@subsection AnnFileRFrom
@findex AnnFileRFrom
@table @asis
@item Syntax:
@code{AnnFileRFrom <on|off>}
@item Example:
@code{AnnFileRFrom on}
@end table

Show in announcement: address of system which file was received from.

This statement can be repeated only for different AnnAreaTag.

@node AnnFileOrigin, Announcements example, AnnFileRFrom, Announce System
@subsection AnnFileOrigin
@findex AnnFileOrigin
@table @asis
@item Syntax:
@code{AnnFileOrigin <on|off>}
@item Example:
@code{AnnFileOrigin on}
@end table

Show in announcement: address of system that has hatched file.

This statement can be repeated only for different AnnAreaTag.


@node Announcements example, Common husky keywords, AnnFileOrigin, Announce System
@subsection Announcements example
@findex Announcements example

The following text is taken from a real config file.

@example
#= Announcements definitions =====================================
AnnounceSpool   E:\FIDO\EXCH\report

# report all arrived files to file e:\fido\rep.txt
AnnAreaTag      @@e:\fido\rep.txt
AnnFileOrigin   on

# report into area 'seumbieky.news'
# files posted to 'union.*' group of fileechos
AnnAreaTag      seumbieky.news
AnnInclude      union.*
AnnSubj         New mp3's arrives
AnnTo           United mp3 fans
AnnFrom         Fullfeed Distribution Site
AnnOrigin       *** seumbieky forever ***
AnnFileOrigin   on
AnnFileRfrom    on

# report 'uue.*' group of fileechos into area 'seumbieky.news'
AnnAreaTag      seumbieky.news
AnnInclude      uue.*

# report into area 'seumbieky.news'
# all other exept of 'uue.* and union.*' groups
AnnAreaTag      seumbieky.news
AnnExclude      uue.* union.*

# report via netmail to defined address
AnnAreaTag      netmail
AnnInclude      union.*
AnnSubj         New mp3's arrives
AnnTo           Max Inda Houze
Annaddrto       2:464/108
AnnFrom         Fullfeed Distribution Site
Annaddrfrom     2:464/910.108
AnnOrigin       *** seumbieky forever ***
AnnMessFlags    k/s loc hld
AnnFileOrigin   on
AnnFileRfrom    on
#= Announces definitions ends ================================
@end example

@node Common husky keywords, Keyword Index, Announcements example, Configuration Reference
@subsection Common husky keywords
@findex Common husky keywords

List of keywords used in many husky programs. For details see fidoconfig manual.

@table @asis
@item @code{BBSArea}
@item @code{LogLevels}
...
@end table


@node Keyword Index, , Common husky keywords, Top

@value{HTICK} is based on FIDOCONFIG library, so read documentation of
FIDOCONFIG about location of config file, keywords ideology and about
majority of the keywords, @xref{Top, Fidoconfig Manual, , fidoconfig, Fidoconfig manual}.

@appendix Configuration File Keyword Index
@printindex fn

@bye
